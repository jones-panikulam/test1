on:
  push:
    branches: [ main ]
 # pull_request:
 #   branches: [ main ]


jobs:

  container-job:
   
    name: Build for Dev server in GCP
    runs-on: ubuntu-latest
    container: docker:19.03
    services:
      # Label used to access the service container
      docker:
        # Docker Hub image
        image: docker:19.03-dind
    steps:
    - uses: actions/checkout@v3
    - name: adding ssh agent 
      run: |
           cat /etc/os-release
           which ssh-agent || ( apk update && apk add --no-cache openssh && apk add openssh-client git)
           mkdir -p ~/.ssh
           pwd
           echo "NPCI_DEV_SERVER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
           chmod 700 ~/.ssh/id_rsa
           eval "$(ssh-agent -s)"
           #ssh-add ~/.ssh/id_rsa
           ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
           apk update && apk add --no-cache python3 py-pip
           
           #docker run -d nginx
           #docker ps
           #docker build -t frontend:test1 -f ../Dockerfile
           #docker save --output fn_image.tar frontend:test1
           
    - name: Build and Push docker image
      working-directory: application
      run: docker build -t frontend:test1 .
      
    - name: Check scp and ssh 
      run: |
           ssh -V
      
 #     run: |
  #         docker run nginx 
   #        docker ps
    #       #docker build -t frontend:test1 .
     #      #docker save --output fn_image.tar frontend:test1

           
  build: 
  
    name: Build for Dev server in AWS
    runs-on: ubuntu-latest
    needs: [container-job]
    steps:
      - name: Test for environment vairable
        run: |
             echo "build ${{secrets.NAME_VAR}} completed"
             echo "build 3 completed"
             cat /etc/os-release
            
    if: contains( github.ref, 'main')
    
  build-and-deploy:
  
    name: Deploy for Dev server in AWS
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: echo "build 2 completed"
    if: contains( github.ref, 'main') 
